def apikey = new File('apikey.txt').text
def baseName = "AllForFunModpack"

def changeLog(){
    boolean isGettingVersion = false
    StringBuilder changes = new StringBuilder(new File('changes.txt').text.length()*2)
    String header = "Changes for version ${version()}:\n"
    changes.append(header)
    for(t in header.toCharArray()){
        changes.append('=')
    }
    changes.append('\n')
    boolean isList = false
    new File('changes.txt').eachLine { line ->
        if (!isGettingVersion && line != "Version:" && line != "" && !line.startsWith("//") && !line.startsWith("#")) {
            def chars = line.toCharArray()
            if (chars.getAt(chars.size() - 1) == ':') {
                isList = true
                changes.append("\n$line\n")
                StringBuilder lineBelow = new StringBuilder(line.length())
                for(t in line.toCharArray()){
                    lineBelow.append('-')
                }
                changes.append("${lineBelow.toString()}\n")
            } else if (isList) {
                changes.append("- $line\n")
            }
        } else if(line == ""){
            isList = false
        }
        isGettingVersion = line == "Version:"
    }
    changes.toString()
}
task changes << {
    println changeLog()
}
def version(){
    boolean isGettingVersion = false
    String modVersion = "?.?"
    new File('changes.txt').eachLine { line ->
        if(isGettingVersion){
            modVersion = line
        }
        isGettingVersion = line == "Version:"
    }
    "v$modVersion"
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "codehaus"
            url = 'http://snapshots.repository.codehaus.org/'
    }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: "groovy"
apply plugin: 'curseforge'
changeLog()
version= version()
group= "com.allforfunmc.modpack" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = baseName

minecraft {
    version = "1.7.10-10.13.1.1217"
    assetDir = "eclipse/assets"
}
curse {
    apiKey = apikey
    projectId = "224515"
    changelog = changeLog()
    releaseType = "beta"
}


dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

